---
import remarkParse from "remark-parse";
import remarkRehype from "remark-rehype";
import rehypeStringify from "rehype-stringify";
import { unified } from "unified";
import { fetchPosts } from "../../esa-utils/fetch";
import Layout from "../../layouts/Layout.astro";

/**
 * 動的にページを生成するときに必須の関数
 *
 * @see https://docs.astro.build/ja/reference/routing-reference/#getstaticpaths
 */
export async function getStaticPaths() {
  const response = await fetchPosts();
  const posts = response.posts;
  const paths = posts.map((post) => ({
    params: { id: post.number },
    props: { post: post },
  }));
  return paths;
}

const { post } = Astro.props;
const articleHtml = unified()
  .use(remarkParse)
  .use(remarkRehype, { allowDangerousHtml: true })
  .use(rehypeStringify, { allowDangerousHtml: true })
  .processSync(post.body_md)
  .toString();
---

<Layout>
  <article set:html={articleHtml} />
</Layout>

<style is:inline>
  article {
    margin: 8px;
  }
  h1 {
    font-size: 2rem;
  }
</style>
